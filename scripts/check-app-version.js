#!/usr/bin/env node

/**
 * Script pour v√©rifier la version de l'application
 * Usage: node scripts/check-app-version.js
 */

import fs from 'fs';
import path from 'path';

function checkAppVersion() {
  console.log('üîç V√©rification de la version de l\'application - Nzoo Immo\n');
  
  // V√©rifier le service d'email
  const emailServicePath = path.join(process.cwd(), 'src', 'services', 'emailService.ts');
  
  if (fs.existsSync(emailServicePath)) {
    const emailServiceContent = fs.readFileSync(emailServicePath, 'utf8');
    
    console.log('üìß Service d\'email:');
    
    // V√©rifier l'email d'administration
    if (emailServiceContent.includes('tricksonmabengi123@gmail.com')) {
      console.log('‚úÖ Email admin correct: tricksonmabengi123@gmail.com');
    } else {
      console.log('‚ùå Email admin incorrect ou manquant');
    }
    
    // V√©rifier la fonction Edge
    if (emailServiceContent.includes('send-email-confirmation')) {
      console.log('‚úÖ Fonction Edge correcte: send-email-confirmation');
    } else {
      console.log('‚ùå Fonction Edge incorrecte');
    }
    
    // V√©rifier les imports
    if (emailServiceContent.includes('import { supabase }')) {
      console.log('‚úÖ Import Supabase pr√©sent');
    } else {
      console.log('‚ùå Import Supabase manquant');
    }
    
  } else {
    console.log('‚ùå Fichier emailService.ts non trouv√©');
  }
  
  // V√©rifier le service de r√©servation
  const reservationServicePath = path.join(process.cwd(), 'src', 'services', 'reservationService.ts');
  
  if (fs.existsSync(reservationServicePath)) {
    const reservationServiceContent = fs.readFileSync(reservationServicePath, 'utf8');
    
    console.log('\nüìã Service de r√©servation:');
    
    // V√©rifier l'import du service d'email
    if (reservationServiceContent.includes('import { sendReservationEmails }')) {
      console.log('‚úÖ Import sendReservationEmails pr√©sent');
    } else {
      console.log('‚ùå Import sendReservationEmails manquant');
    }
    
    // V√©rifier l'appel √† sendReservationEmails
    if (reservationServiceContent.includes('sendReservationEmails(')) {
      console.log('‚úÖ Appel √† sendReservationEmails pr√©sent');
    } else {
      console.log('‚ùå Appel √† sendReservationEmails manquant');
    }
    
  } else {
    console.log('‚ùå Fichier reservationService.ts non trouv√©');
  }
  
  // V√©rifier la page de r√©servation
  const reservationPagePath = path.join(process.cwd(), 'src', 'pages', 'ReservationPage.tsx');
  
  if (fs.existsSync(reservationPagePath)) {
    const reservationPageContent = fs.readFileSync(reservationPagePath, 'utf8');
    
    console.log('\nüìÑ Page de r√©servation:');
    
    // V√©rifier l'import du service de r√©servation
    if (reservationPageContent.includes('import { createReservation }')) {
      console.log('‚úÖ Import createReservation pr√©sent');
    } else {
      console.log('‚ùå Import createReservation manquant');
    }
    
    // V√©rifier l'appel √† createReservation
    if (reservationPageContent.includes('createReservation(')) {
      console.log('‚úÖ Appel √† createReservation pr√©sent');
    } else {
      console.log('‚ùå Appel √† createReservation manquant');
    }
    
  } else {
    console.log('‚ùå Fichier ReservationPage.tsx non trouv√©');
  }
  
  console.log('\nüéØ Recommandations:');
  console.log('1. Si tous les ‚úÖ sont pr√©sents, l\'application devrait fonctionner');
  console.log('2. Si des ‚ùå sont pr√©sents, red√©marrez l\'application avec npm run dev');
  console.log('3. V√©rifiez que l\'application utilise bien la derni√®re version des fichiers');
}

checkAppVersion();




