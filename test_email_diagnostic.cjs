// Script de diagnostic pour tester l'envoi d'emails
const { createClient } = require('@supabase/supabase-js');

// Configuration Supabase
const supabaseUrl = 'https://nnkywmfxoohehtyyzzgp.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ua3l3bWZ4b29oZWh0eXl6emdwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQxNDQ3NTcsImV4cCI6MjA2OTcyMDc1N30.VZtsHLfbVks1uLhfnjW6uJSP0-J-Z30-WWT5D_B8Jpk';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testEmailSending() {
  console.log('üß™ Test de diagnostic des emails - Nzoo Immo\n');

  // Test 1: V√©rifier la fonction Edge
  console.log('üìß Test 1: V√©rification de la fonction Edge...');
  try {
    const { data, error } = await supabase.functions.invoke('send-confirmation-email', {
      body: {
        to: 'test@example.com',
        subject: 'Test Email - Nzoo Immo',
        html: '<h1>Test Email</h1><p>Ceci est un test d\'envoi d\'email.</p>',
        reservationData: {
          fullName: 'Test User',
          email: 'test@example.com',
          phone: '123456789',
          amount: 100,
          transactionId: 'TEST-123'
        }
      }
    });

    if (error) {
      console.log('‚ùå Erreur fonction Edge:', error.message);
      console.log('üìã D√©tails:', error);
    } else {
      console.log('‚úÖ R√©ponse fonction Edge:', data);
    }
  } catch (err) {
    console.log('‚ùå Erreur lors de l\'appel de la fonction:', err.message);
  }

  // Test 2: Test direct Resend
  console.log('\nüìß Test 2: Test direct Resend...');
  const RESEND_API_KEY = 're_co5qjWjp_GhVJvvpZe72FAYaBYsLEEw4h';
  
  try {
    const response = await fetch('https://api.resend.com/emails', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${RESEND_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        from: 'reservations@nzooimmo.com',
        to: ['test@example.com'],
        subject: 'Test Direct Resend - Nzoo Immo',
        html: '<h1>Test Direct</h1><p>Test d\'envoi direct via Resend.</p>',
        reply_to: 'reservations@nzooimmo.com'
      })
    });

    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ Envoi direct Resend r√©ussi:', result);
    } else {
      const errorText = await response.text();
      console.log('‚ùå Erreur envoi direct Resend:', response.status, errorText);
    }
  } catch (err) {
    console.log('‚ùå Erreur r√©seau Resend:', err.message);
  }

  // Test 3: V√©rifier les variables d'environnement
  console.log('\nüìß Test 3: V√©rification des variables d\'environnement...');
  console.log('RESEND_API_KEY configur√©e:', !!RESEND_API_KEY);
  console.log('Longueur de la cl√©:', RESEND_API_KEY ? RESEND_API_KEY.length : 0);
  
  // Test 4: Simulation d'une r√©servation compl√®te
  console.log('\nüìß Test 4: Simulation d\'une r√©servation compl√®te...');
  
  const reservationData = {
    fullName: 'Test User',
    email: 'test@example.com',
    phone: '123456789',
    company: 'Test Company',
    activity: 'Test Activity',
    spaceType: 'coworking',
    startDate: '2024-01-15',
    endDate: '2024-01-16',
    amount: 100,
    transactionId: 'TEST-123',
    status: 'confirmed'
  };

  try {
    // Simuler l'envoi d'emails comme dans le service
    console.log('üìß Envoi email client...');
    const clientEmailResult = await supabase.functions.invoke('send-confirmation-email', {
      body: {
        to: reservationData.email,
        subject: `Confirmation de r√©servation - ${reservationData.fullName}`,
        html: generateClientEmailHtml(reservationData),
        reservationData
      }
    });

    console.log('üìß Envoi email admin...');
    const adminEmailResult = await supabase.functions.invoke('send-confirmation-email', {
      body: {
        to: 'tricksonmabengi123@gmail.com',
        subject: `Nouvelle r√©servation re√ßue - ${reservationData.fullName}`,
        html: generateAdminEmailHtml(reservationData),
        reservationData
      }
    });

    console.log('üìß R√©sultats:');
    console.log('- Client:', clientEmailResult.error ? '‚ùå' : '‚úÖ');
    console.log('- Admin:', adminEmailResult.error ? '‚ùå' : '‚úÖ');
    
    if (clientEmailResult.error) {
      console.log('Erreur client:', clientEmailResult.error);
    }
    if (adminEmailResult.error) {
      console.log('Erreur admin:', adminEmailResult.error);
    }

  } catch (err) {
    console.log('‚ùå Erreur lors de la simulation:', err.message);
  }
}

function generateClientEmailHtml(data) {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <title>Confirmation de R√©servation - N'zoo Immo</title>
    </head>
    <body>
      <h1>‚úÖ Confirmation de R√©servation</h1>
      <p>Bonjour ${data.fullName},</p>
      <p>Votre r√©servation a √©t√© confirm√©e avec succ√®s.</p>
      <h2>D√©tails de la r√©servation :</h2>
      <ul>
        <li><strong>R√©f√©rence :</strong> ${data.transactionId}</li>
        <li><strong>Montant :</strong> ${data.amount}‚Ç¨</li>
        <li><strong>Type d'espace :</strong> ${data.spaceType}</li>
        <li><strong>Date de d√©but :</strong> ${data.startDate}</li>
        <li><strong>Date de fin :</strong> ${data.endDate}</li>
      </ul>
    </body>
    </html>
  `;
}

function generateAdminEmailHtml(data) {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <title>Nouvelle R√©servation - N'zoo Immo</title>
    </head>
    <body>
      <h1>üîî Nouvelle R√©servation Re√ßue</h1>
      <p>Une nouvelle r√©servation n√©cessite votre attention.</p>
      <h2>D√©tails :</h2>
      <ul>
        <li><strong>Client :</strong> ${data.fullName}</li>
        <li><strong>Email :</strong> ${data.email}</li>
        <li><strong>T√©l√©phone :</strong> ${data.phone}</li>
        <li><strong>Montant :</strong> ${data.amount}‚Ç¨</li>
      </ul>
    </body>
    </html>
  `;
}

// Ex√©cuter le diagnostic
testEmailSending().catch(console.error);
