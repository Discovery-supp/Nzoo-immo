import { z } from 'zod';
export declare const updateContactSchema: z.ZodEffects<z.ZodObject<{
    audienceId: z.ZodString;
    id: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
    firstName: z.ZodOptional<z.ZodString>;
    lastName: z.ZodOptional<z.ZodString>;
    unsubscribed: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    audienceId: string;
    email?: string | undefined;
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    unsubscribed?: boolean | undefined;
}, {
    audienceId: string;
    email?: string | undefined;
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    unsubscribed?: boolean | undefined;
}>, {
    audienceId: string;
    email?: string | undefined;
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    unsubscribed?: boolean | undefined;
}, {
    audienceId: string;
    email?: string | undefined;
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    unsubscribed?: boolean | undefined;
}>;
export type UpdateContactData = z.infer<typeof updateContactSchema>;
//# sourceMappingURL=schema.d.ts.map