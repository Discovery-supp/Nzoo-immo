import { jsx as _jsx } from "react/jsx-runtime";
import { ListDisplay } from '../../../components/ui/ListDisplay.js';
import { listApiKeys } from './action.js';
import { displayFields } from './fields.js';
export const Form = ({ onExit }) => {
    const formatData = (data) => {
        // Handle both possible response structures: direct array or nested object
        let apiKeys = [];
        if (Array.isArray(data)) {
            // Direct array format
            apiKeys = data;
        }
        else if (data && typeof data === 'object' && 'data' in data) {
            // Nested object format: { data: ApiKey[] }
            const nested = data;
            apiKeys = Array.isArray(nested.data) ? nested.data : [];
        }
        return apiKeys.map((key) => ({
            id: key.id,
            name: key.name,
            created_at: new Date(key.created_at).toLocaleString(),
        }));
    };
    // Note: listApiKeys doesn't use loadData parameter, but we need to match the signature
    const loadFunction = async (_data, apiKey) => {
        return listApiKeys(apiKey);
    };
    return (_jsx(ListDisplay, { title: "API Keys - List", onExit: onExit, loadFunction: loadFunction, displayFields: displayFields, formatData: formatData, loadData: {}, noDataMessage: "No API keys found." }));
};
//# sourceMappingURL=Form.js.map