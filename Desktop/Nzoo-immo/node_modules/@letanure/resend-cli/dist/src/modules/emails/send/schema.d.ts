import { z } from 'zod';
export declare const CreateEmailOptionsSchema: z.ZodEffects<z.ZodEffects<z.ZodObject<{
    to: z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodArray<z.ZodString, "many">, z.ZodUndefined]> | z.ZodEffects<z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodArray<z.ZodString, "many">, z.ZodUndefined]>, string | string[], string | string[] | undefined>;
    from: z.ZodUnion<[z.ZodString, z.ZodUndefined]> | z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodUndefined]>, string, string | undefined>;
    subject: z.ZodUnion<[z.ZodString, z.ZodUndefined]> | z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodUndefined]>, string, string | undefined>;
    bcc: z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodArray<z.ZodString, "many">, z.ZodUndefined]> | z.ZodEffects<z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodArray<z.ZodString, "many">, z.ZodUndefined]>, string | string[], string | string[] | undefined>;
    cc: z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodArray<z.ZodString, "many">, z.ZodUndefined]> | z.ZodEffects<z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodArray<z.ZodString, "many">, z.ZodUndefined]>, string | string[], string | string[] | undefined>;
    scheduledAt: z.ZodEffects<z.ZodOptional<z.ZodString>, string | undefined, string | undefined>;
    replyTo: z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodArray<z.ZodString, "many">, z.ZodUndefined]> | z.ZodEffects<z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodArray<z.ZodString, "many">, z.ZodUndefined]>, string | string[], string | string[] | undefined>;
    html: z.ZodUnion<[z.ZodString, z.ZodUndefined]> | z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodUndefined]>, string, string | undefined>;
    text: z.ZodUnion<[z.ZodString, z.ZodUndefined]> | z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodUndefined]>, string, string | undefined>;
    headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    attachments: z.ZodOptional<z.ZodArray<z.ZodObject<{
        content: z.ZodString;
        filename: z.ZodString;
        path: z.ZodOptional<z.ZodString>;
        content_type: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        content: string;
        filename: string;
        path?: string | undefined;
        content_type?: string | undefined;
    }, {
        content: string;
        filename: string;
        path?: string | undefined;
        content_type?: string | undefined;
    }>, "many">>;
    tags: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        name: string;
    }, {
        value: string;
        name: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    text?: string | undefined;
    html?: string | undefined;
    to?: string | string[] | undefined;
    cc?: string | string[] | undefined;
    bcc?: string | string[] | undefined;
    replyTo?: string | string[] | undefined;
    from?: string | undefined;
    subject?: string | undefined;
    scheduledAt?: string | undefined;
    headers?: Record<string, string> | undefined;
    attachments?: {
        content: string;
        filename: string;
        path?: string | undefined;
        content_type?: string | undefined;
    }[] | undefined;
    tags?: {
        value: string;
        name: string;
    }[] | undefined;
}, {
    text?: string | undefined;
    html?: string | undefined;
    to?: string | string[] | undefined;
    cc?: string | string[] | undefined;
    bcc?: string | string[] | undefined;
    replyTo?: string | string[] | undefined;
    from?: string | undefined;
    subject?: string | undefined;
    scheduledAt?: string | undefined;
    headers?: Record<string, string> | undefined;
    attachments?: {
        content: string;
        filename: string;
        path?: string | undefined;
        content_type?: string | undefined;
    }[] | undefined;
    tags?: {
        value: string;
        name: string;
    }[] | undefined;
}>, {
    text?: string | undefined;
    html?: string | undefined;
    to?: string | string[] | undefined;
    cc?: string | string[] | undefined;
    bcc?: string | string[] | undefined;
    replyTo?: string | string[] | undefined;
    from?: string | undefined;
    subject?: string | undefined;
    scheduledAt?: string | undefined;
    headers?: Record<string, string> | undefined;
    attachments?: {
        content: string;
        filename: string;
        path?: string | undefined;
        content_type?: string | undefined;
    }[] | undefined;
    tags?: {
        value: string;
        name: string;
    }[] | undefined;
}, {
    text?: string | undefined;
    html?: string | undefined;
    to?: string | string[] | undefined;
    cc?: string | string[] | undefined;
    bcc?: string | string[] | undefined;
    replyTo?: string | string[] | undefined;
    from?: string | undefined;
    subject?: string | undefined;
    scheduledAt?: string | undefined;
    headers?: Record<string, string> | undefined;
    attachments?: {
        content: string;
        filename: string;
        path?: string | undefined;
        content_type?: string | undefined;
    }[] | undefined;
    tags?: {
        value: string;
        name: string;
    }[] | undefined;
}>, Partial<{
    text?: string | undefined;
    html?: string | undefined;
    to?: string | string[] | undefined;
    cc?: string | string[] | undefined;
    bcc?: string | string[] | undefined;
    replyTo?: string | string[] | undefined;
    from?: string | undefined;
    subject?: string | undefined;
    scheduledAt?: string | undefined;
    headers?: Record<string, string> | undefined;
    attachments?: {
        content: string;
        filename: string;
        path?: string | undefined;
        content_type?: string | undefined;
    }[] | undefined;
    tags?: {
        value: string;
        name: string;
    }[] | undefined;
}>, {
    text?: string | undefined;
    html?: string | undefined;
    to?: string | string[] | undefined;
    cc?: string | string[] | undefined;
    bcc?: string | string[] | undefined;
    replyTo?: string | string[] | undefined;
    from?: string | undefined;
    subject?: string | undefined;
    scheduledAt?: string | undefined;
    headers?: Record<string, string> | undefined;
    attachments?: {
        content: string;
        filename: string;
        path?: string | undefined;
        content_type?: string | undefined;
    }[] | undefined;
    tags?: {
        value: string;
        name: string;
    }[] | undefined;
}>;
export type CreateEmailOptionsType = z.infer<typeof CreateEmailOptionsSchema>;
//# sourceMappingURL=schema.d.ts.map