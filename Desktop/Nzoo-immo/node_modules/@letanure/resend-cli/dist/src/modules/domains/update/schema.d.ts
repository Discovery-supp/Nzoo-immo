import { z } from 'zod';
export declare const updateDomainSchema: z.ZodObject<{
    domainId: z.ZodString;
    clickTracking: z.ZodOptional<z.ZodBoolean>;
    openTracking: z.ZodOptional<z.ZodBoolean>;
    tls: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["opportunistic", "enforced"]>, z.ZodEffects<z.ZodLiteral<"">, undefined, "">, z.ZodUndefined]>>;
}, "strip", z.ZodTypeAny, {
    domainId: string;
    clickTracking?: boolean | undefined;
    openTracking?: boolean | undefined;
    tls?: "opportunistic" | "enforced" | undefined;
}, {
    domainId: string;
    clickTracking?: boolean | undefined;
    openTracking?: boolean | undefined;
    tls?: "" | "opportunistic" | "enforced" | undefined;
}>;
export type UpdateDomainData = z.infer<typeof updateDomainSchema>;
//# sourceMappingURL=schema.d.ts.map