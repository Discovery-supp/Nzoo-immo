import type { ApiResult, CliField } from '../types/index.js';
import type { OutputFormat } from './output.js';
export interface OperationMessages<T = unknown> {
    success: {
        title: string;
        message: (data: T) => string;
    };
    error: {
        title: string;
        message: string;
    };
    dryRun: {
        title: string;
        message: string;
    };
}
export interface DisplayResultsOptions<TData, TResult = TData> {
    data: TData;
    result?: ApiResult<TResult>;
    fields: Array<CliField>;
    outputFormat: OutputFormat;
    apiKey?: string;
    operation: OperationMessages<TResult>;
    isDryRun?: boolean;
}
/**
 * Generic function to display CLI operation results
 * Handles success, error, and dry-run scenarios consistently
 */
export declare function displayResults<TData extends Record<string, unknown>, TResult = TData>(options: DisplayResultsOptions<TData, TResult>): void;
//# sourceMappingURL=display-results.d.ts.map