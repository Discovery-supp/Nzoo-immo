import type { FormField } from '../../types/index.js';
export interface SuccessScreenProps {
    /** The data object to display */
    data: Record<string, unknown>;
    /** Success message to show in alert */
    successMessage: string;
    /** Header text for the layout */
    headerText: string;
    /** Field definitions for proper labeling and formatting */
    fields?: Array<FormField>;
    /** Specific fields to show (if not provided, shows all non-empty fields) */
    fieldsToShow?: Array<string>;
    /** Whether this is a dry run (shows warning instead of success) */
    isDryRun?: boolean;
    /** Callback when user exits */
    onExit: () => void;
}
/**
 * Reusable component for displaying success data in a consistent format across all modules.
 * Handles both regular success displays and dry run displays with appropriate warnings.
 * Replaces the need for individual success/dry run display components in each module.
 */
export declare const SuccessScreen: ({ data, successMessage, headerText, fields, fieldsToShow, isDryRun, onExit, }: SuccessScreenProps) => import("react/jsx-runtime").JSX.Element;
//# sourceMappingURL=SuccessScreen.d.ts.map