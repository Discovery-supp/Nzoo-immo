import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { Alert } from '@inkjs/ui';
import { createContext, useContext } from 'react';
import { getResendApiKeyDocsUrl, getResendApiKeyOrNull } from '../utils/resend-api.js';
const ResendContext = createContext(null);
export const ResendProvider = ({ children, apiKey: providedApiKey }) => {
    // Priority order: 1) Environment variable, 2) Provided API key
    const apiKey = getResendApiKeyOrNull() || providedApiKey;
    if (!apiKey) {
        return (_jsxs(Alert, { variant: "warning", children: ["Missing RESEND_API_KEY environment variable or --api-key option. Please set one to use the CLI.", '\n', "Get your API key at ", getResendApiKeyDocsUrl()] }));
    }
    return _jsx(ResendContext.Provider, { value: { apiKey }, children: children });
};
export const useResend = () => {
    const context = useContext(ResendContext);
    if (!context) {
        throw new Error('useResend must be used within a ResendProvider');
    }
    return context;
};
//# sourceMappingURL=ResendProvider.js.map