#!/usr/bin/env node

/**
 * Test SendGrid avec une adresse email de test
 */

// Utiliser une variable d'environnement pour la cl√© API
const SENDGRID_API_KEY = process.env.SENDGRID_API_KEY || 'VOTRE_CLE_API_SENDGRID_ICI';

async function testSendGridTestEmail() {
  console.log('üîß TEST SENDGRID AVEC EMAIL DE TEST');
  console.log('=====================================');
  console.log('');
  
  if (SENDGRID_API_KEY === 'VOTRE_CLE_API_SENDGRID_ICI') {
    console.log('‚ùå ERREUR: Cl√© API SendGrid non configur√©e');
    console.log('');
    console.log('üìã Pour configurer :');
    console.log('1. Obtenez votre cl√© API sur https://sendgrid.com');
    console.log('2. Ex√©cutez : SENDGRID_API_KEY=votre_cle node test_sendgrid_test_email.cjs');
    console.log('');
    return false;
  }
  
  try {
    console.log('üìß Test d\'envoi avec email de test...');
    
    const response = await fetch('https://api.sendgrid.com/v3/mail/send', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${SENDGRID_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        personalizations: [
          {
            to: [{ email: 'trickson.mabengi@gmail.com' }]
          }
        ],
        from: { email: 'test@example.com' }, // Email de test
        subject: 'Test SendGrid Test Email - Nzoo Immo',
        content: [
          {
            type: 'text/html',
            value: `
              <h1>Test SendGrid avec Email de Test</h1>
              <p>Cet email a √©t√© envoy√© via SendGrid avec une adresse de test.</p>
              <p>Timestamp: ${new Date().toISOString()}</p>
              <p>Si vous recevez cet email, SendGrid fonctionne parfaitement !</p>
            `
          }
        ]
      })
    });

    console.log('üìä Statut de la r√©ponse:', response.status);

    if (response.ok) {
      console.log('‚úÖ SendGrid fonctionne parfaitement !');
      console.log('üìß Email envoy√© avec succ√®s');
      console.log('‚úÖ V√©rifiez votre bo√Æte de r√©ception');
      return true;
    } else {
      const errorText = await response.text();
      console.log('‚ùå Erreur SendGrid:', response.status);
      console.log('‚ùå D√©tails:', errorText);
      
      if (errorText.includes('verified Sender Identity')) {
        console.log('');
        console.log('üí° SOLUTION : V√©rifiez votre adresse email dans SendGrid');
        console.log('üìã √âtapes d√©taill√©es :');
        console.log('1. Allez sur https://sendgrid.com');
        console.log('2. Connectez-vous √† votre compte');
        console.log('3. Allez dans Settings ‚Üí Sender Authentication');
        console.log('4. Cliquez sur "Verify a Single Sender"');
        console.log('5. Ajoutez : trickson.mabengi@gmail.com');
        console.log('6. Confirmez l\'email de v√©rification');
        console.log('');
        console.log('üîß En attendant, nous pouvons continuer avec Resend qui fonctionne d√©j√† !');
      }
      
      return false;
    }
    
  } catch (error) {
    console.log('‚ùå Erreur g√©n√©rale:', error.message);
    return false;
  }
}

testSendGridTestEmail().then(success => {
  if (success) {
    console.log('\nüéâ TEST R√âUSSI ! SendGrid fonctionne.');
    console.log('üîß Maintenant nous pouvons configurer Supabase.');
  } else {
    console.log('\n‚ùå TEST √âCHOU√â. V√©rifiez votre adresse email dans SendGrid.');
    console.log('üí° En attendant, Resend fonctionne d√©j√† parfaitement !');
  }
}).catch(console.error);
